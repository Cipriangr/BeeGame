{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://beegame/./src/config/constants.ts","webpack://beegame/./src/services/StorageService.ts","webpack://beegame/./src/ui/DisplayGameUI.ts","webpack://beegame/./src/components/SwarmComponent.ts","webpack://beegame/./src/services/GameService.ts","webpack://beegame/./src/components/HitButtonComponent.ts","webpack://beegame/./src/app.ts","webpack://beegame/./src/ui/PlayerUI.ts","webpack://beegame/./src/ui/StartButtonUI.ts"],"sourcesContent":["export var BeeType;\n(function (BeeType) {\n    BeeType[\"QUEEN\"] = \"Queen\";\n    BeeType[\"WORKER\"] = \"Workers\";\n    BeeType[\"DRONE\"] = \"Drones\";\n})(BeeType || (BeeType = {}));\nexport var BeeTypeSingular;\n(function (BeeTypeSingular) {\n    BeeTypeSingular[\"QUEEN\"] = \"Queen\";\n    BeeTypeSingular[\"WORKER\"] = \"Worker\";\n    BeeTypeSingular[\"DRONE\"] = \"Drone\";\n})(BeeTypeSingular || (BeeTypeSingular = {}));\n// Mapping from BeeType to BeeTypeSingular\nexport const BeeTypeMapping = {\n    [BeeType.QUEEN]: BeeTypeSingular.QUEEN,\n    [BeeType.WORKER]: BeeTypeSingular.WORKER,\n    [BeeType.DRONE]: BeeTypeSingular.DRONE\n};\nexport const BeeHealth = {\n    [BeeType.QUEEN]: 100,\n    [BeeType.WORKER]: 75,\n    [BeeType.DRONE]: 50\n};\nexport const BeeHitDamage = {\n    [BeeType.QUEEN]: 8,\n    [BeeType.WORKER]: 10,\n    [BeeType.DRONE]: 12\n};\n","export function getGameStatus() {\n    const status = localStorage.getItem('gameInProgress');\n    return status === 'true';\n}\n// Save the game status as a boolean by converting it to a string\nexport function saveGameStatus(status) {\n    localStorage.setItem('gameInProgress', String(status));\n}\nexport function saveSwarm(swarm) {\n    localStorage.setItem('swarm', JSON.stringify(swarm));\n}\nexport function getSwarm() {\n    return JSON.parse(localStorage.getItem('swarm') || '{}');\n}\nexport function savePlayerName(name) {\n    localStorage.setItem('playerName', name);\n}\nexport function getPlayerName() {\n    return localStorage.getItem('playerName') || '';\n}\nexport function resetGame() {\n    localStorage.clear();\n}\nexport function updateBeeStorage(bee) {\n    const swarm = getSwarm();\n    const beeType = bee.type;\n    const beeIndex = swarm[beeType].findIndex((b) => b.id === bee.id);\n    console.log('bee', bee);\n    if (beeIndex !== -1) { //bee index exist in storage?\n        swarm[beeType][beeIndex] = bee;\n        saveSwarm(swarm);\n    }\n}\n","import { BeeType } from '../config/constants';\nimport { getSwarm, getPlayerName } from '../services/StorageService';\nimport { createBees } from '../components/SwarmComponent';\nconst swarmSection = document.getElementById('swarm-section');\n// Display the player name and swarm\nexport function displayGameUI() {\n    const playerName = getPlayerName();\n    const Swarm = getSwarm();\n    if (swarmSection) {\n        swarmSection.innerHTML = ''; // Clear existing content to prevent duplication\n        const playerNameElement = document.createElement('h3');\n        playerNameElement.innerText = `Hey ${playerName.toUpperCase()}! Press Hit to attack the bees`;\n        swarmSection.appendChild(playerNameElement);\n        const divMap = {\n            [BeeType.WORKER]: document.createElement('div'),\n            [BeeType.QUEEN]: document.createElement('div'),\n            [BeeType.DRONE]: document.createElement('div'),\n        };\n        Object.keys(Swarm).forEach((key) => {\n            const beeType = key;\n            const bees = Swarm[beeType] || [];\n            const beeContainer = divMap[beeType];\n            beeContainer.setAttribute('class', beeType.toLowerCase());\n            beeContainer.setAttribute('id', 'bees');\n            if (beeContainer) {\n                createBees(beeType, bees, beeContainer);\n                swarmSection.appendChild(beeContainer);\n            }\n        });\n    }\n}\n","import { BeeHealth, BeeType, BeeTypeMapping } from '../config/constants';\nimport { saveSwarm } from '../services/StorageService';\nexport function initializeSwarm() {\n    const Swarm = {\n        Workers: [\n            { id: 2, type: BeeType.WORKER, health: BeeHealth[BeeType.WORKER], isAlive: true },\n            { id: 3, type: BeeType.WORKER, health: BeeHealth[BeeType.WORKER], isAlive: true },\n            { id: 4, type: BeeType.WORKER, health: BeeHealth[BeeType.WORKER], isAlive: true },\n            { id: 5, type: BeeType.WORKER, health: BeeHealth[BeeType.WORKER], isAlive: true },\n            { id: 6, type: BeeType.WORKER, health: BeeHealth[BeeType.WORKER], isAlive: true }\n        ],\n        Queen: [\n            { id: 1, type: BeeType.QUEEN, health: BeeHealth[BeeType.QUEEN], isAlive: true }\n        ],\n        Drones: [\n            { id: 7, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 8, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 9, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 10, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 11, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 12, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 13, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true },\n            { id: 14, type: BeeType.DRONE, health: BeeHealth[BeeType.DRONE], isAlive: true }\n        ]\n    };\n    saveSwarm(Swarm);\n}\n// Function to create and render bees in the DOM\nexport function createBees(beeType, bees, container) {\n    bees.forEach((bee) => {\n        if (bee.health <= 0 && !bee.isAlive) {\n            return;\n        }\n        const specificBee = document.createElement('div');\n        specificBee.classList.add('specific-bee');\n        specificBee.setAttribute('id', `${bee.id}`);\n        const healthBar = document.createElement('span');\n        healthBar.classList.add('health-bar');\n        healthBar.innerHTML = `HP: ${bee.health}`;\n        healthBar.setAttribute('data-health', `${bee.health}`);\n        const type = document.createElement('span');\n        const beeTypeDisplay = BeeTypeMapping[bee.type];\n        type.innerHTML = `${beeTypeDisplay} ${bee.id}`;\n        specificBee.appendChild(type);\n        specificBee.appendChild(healthBar);\n        const beeImage = document.createElement('img');\n        beeImage.setAttribute('src', `./assets/${beeType}.png`);\n        beeImage.setAttribute('class', beeType);\n        beeImage.setAttribute('id', `${bee.id}`);\n        beeImage.setAttribute('data-id', `${bee.id}`);\n        specificBee.appendChild(beeImage);\n        container.appendChild(specificBee);\n    });\n}\n","import { initializeSwarm } from '../components/SwarmComponent';\nimport { displayGameUI } from '../ui/DisplayGameUI';\nimport { resetGame } from './StorageService';\nexport function initializeGame() {\n    initializeSwarm();\n    displayGameUI();\n}\nexport function alertAndHandleReset(message, reset) {\n    alert(message);\n    if (reset) {\n        resetGame();\n        location.reload();\n    }\n}\n","import { BeeType, BeeHitDamage, BeeTypeMapping } from \"../config/constants\";\nimport { alertAndHandleReset } from \"../services/GameService\";\nimport { getSwarm, updateBeeStorage } from \"../services/StorageService\";\nexport function hitButtonAction() {\n    const hitButton = document.getElementById('hit-button');\n    if (hitButton) {\n        hitButton.addEventListener('click', () => {\n            //I want to make the button disabled for 1 second after it is clicked\n            // hitButton.disabled = true;\n            const bees = getSwarm();\n            const selectedBee = getRandomBeeType(bees);\n            console.log('selectedBee', selectedBee);\n            if (!selectedBee) {\n                alertAndHandleReset('Game Over! No bees left to hit! The game will be restarted', true);\n                return;\n            }\n            attackBee(selectedBee);\n            // setTimeout(() => {  \n            //     hitButton.disabled = false;\n            // }, 1500);\n        });\n    }\n}\nfunction getRandomBeeType(bees) {\n    const aliveBees = Object.values(bees)\n        .flat() // Flattens arrays so all bees are in one array\n        .filter(bee => bee.isAlive); // Keeps only alive bees\n    if (aliveBees.length === 0) {\n        console.log('No bees left');\n        return undefined;\n    }\n    return aliveBees[Math.floor(Math.random() * aliveBees.length)];\n}\nfunction attackBee(bee) {\n    switch (bee.type) {\n        case BeeType.WORKER:\n            bee.health -= BeeHitDamage[BeeType.WORKER];\n            break;\n        case BeeType.DRONE:\n            bee.health -= BeeHitDamage[BeeType.DRONE];\n            break;\n        default:\n            bee.health -= BeeHitDamage[BeeType.QUEEN];\n    }\n    if (bee.health <= 0) {\n        bee.health = 0;\n        bee.isAlive = false;\n        updateBee(bee);\n        if (bee.type === BeeType.QUEEN) {\n            killEntireSwarm();\n            return;\n        }\n        removeBeeDOMElement(bee);\n        return;\n    }\n    updateBee(bee);\n}\nfunction updateBee(bee) {\n    updateBeeDOMElement(bee);\n    updateBeeStorage(bee);\n}\nfunction updateBeeDOMElement(bee) {\n    const beeElement = document.getElementById(`${bee.id}`);\n    if (!beeElement)\n        return;\n    const beeInfo = document.getElementById('attack-info');\n    if (beeInfo) {\n        beeInfo.innerHTML = damageInfo(bee);\n    }\n    const healthBar = beeElement.querySelector('.health-bar');\n    healthBar.innerHTML = `HP: ${bee.health}`;\n    healthBar.setAttribute('data-health', `${bee.health}`);\n    beeElement.classList.add('enlarge-translate');\n    // Remove the class after 1 second to reset the transformation\n    setTimeout(() => {\n        beeElement.classList.remove('enlarge-translate');\n    }, 1500);\n}\nfunction damageInfo(bee) {\n    if (bee.health <= 0) {\n        return `${BeeTypeMapping[bee.type]} ${bee.id} was hit with ${BeeHitDamage[bee.type]} damage and is now dead because its health reached 0.`;\n    }\n    return `You hit ${BeeTypeMapping[bee.type]} ${bee.id} for ${BeeHitDamage[bee.type]} damage`;\n}\nfunction killEntireSwarm() {\n    alertAndHandleReset('The Queen has died. All bees are dead. The game will restart', true);\n}\nfunction removeBeeDOMElement(bee) {\n    const beeElement = document.getElementById(`${bee.id}`);\n    beeElement.remove();\n}\n","import { alertAndHandleReset, initializeGame } from './services/GameService';\nimport { getGameStatus, saveGameStatus, resetGame, getSwarm, savePlayerName, getPlayerName } from './services/StorageService';\nimport { createStartButton } from './ui/StartButtonUI';\nimport { createPlayerNameElements } from './ui/PlayerUI';\nimport { displayGameUI } from './ui/DisplayGameUI';\nimport { hitButtonAction } from './components/HitButtonComponent';\nlet gameInProgress = getGameStatus();\nconst swarmSection = document.getElementById('swarm-section');\nconst actionButtons = document.getElementById('action-buttons');\nconst attackInfo = document.getElementById('bee-info');\ndocument.addEventListener('DOMContentLoaded', () => {\n    let startGameButton = document.getElementById('start-game');\n    const resetGameButton = document.getElementById('reset-game');\n    const swarm = getSwarm(); // Retrieve swarm data from localStorage\n    //Game not started and swarm data is empty, show input and start button\n    if (!gameInProgress && (Object.keys(swarm).length === 0)) {\n        saveGameStatus(false);\n        createPlayerNameElements(swarmSection);\n        startGameButton = createStartButton(swarmSection, initializeBees);\n        startGameButton.setAttribute('data-initialized', 'false');\n        actionButtons.style.display = 'none';\n        attackInfo.style.display = 'none';\n    }\n    //Game not started, make start button available\n    if (startGameButton && !gameInProgress) {\n        initializeBees(startGameButton);\n    }\n    //Game in progress and swarm data present, display bees directly\n    if (gameInProgress && Object.keys(swarm).length > 0) {\n        displayGameUI();\n        actionButtons.style.display = 'flex';\n        attackInfo.style.display = 'flex';\n        hitButtonAction();\n    }\n    if (resetGameButton) {\n        resetGameButton.addEventListener('click', () => {\n            resetGame();\n            // actionButtons.style.display = 'none';\n            // attackInfo.style.display = 'none';\n            location.reload();\n        });\n    }\n});\nfunction initializeBees(gameButton) {\n    if (gameInProgress || gameButton.hasAttribute('data-initialized')) {\n        return;\n    }\n    gameButton.setAttribute('data-initialized', 'true');\n    const playerInfo = document.getElementById('player-name');\n    const playerInput = document.getElementById('player-name-input');\n    gameButton.addEventListener('click', () => {\n        const playerName = (playerInput === null || playerInput === void 0 ? void 0 : playerInput.value) || getPlayerName();\n        savePlayerName(playerName);\n        if (!playerName) {\n            alertAndHandleReset('Please enter your name to start the game');\n            return;\n        }\n        gameButton.style.display = 'none'; // Hide start button\n        playerInfo.style.display = 'none'; // Hide player input section\n        saveGameStatus(true); // Set game like is in progress\n        initializeGame(); // Initializes game state and saves the swarm to localStorage\n        displayGameUI(); // Displays the initialized bees and player info\n        hitButtonAction();\n        actionButtons.style.display = 'flex';\n        attackInfo.style.display = 'flex';\n    });\n}\n","export function createPlayerNameElements(swarmSection) {\n    if (document.getElementById('player-name-div'))\n        return;\n    const playerNameDiv = document.createElement('div');\n    playerNameDiv.setAttribute('id', 'player-name');\n    const playerNameLabel = document.createElement('label');\n    playerNameLabel.setAttribute('for', 'player-name');\n    playerNameLabel.innerText = 'Please Enter your name and press the button below';\n    const playerNameInput = document.createElement('input');\n    playerNameInput.setAttribute('type', 'text');\n    playerNameInput.setAttribute('id', 'player-name-input');\n    playerNameInput.setAttribute('placeholder', 'Enter your name');\n    playerNameInput.setAttribute('required', 'true');\n    playerNameInput.setAttribute('maxlength', '20');\n    playerNameDiv.appendChild(playerNameLabel);\n    playerNameDiv.appendChild(playerNameInput);\n    swarmSection.appendChild(playerNameDiv);\n}\n","export function createStartButton(swarmSection, initializeBees) {\n    const startButton = document.createElement('button');\n    startButton.setAttribute('id', 'start-game');\n    startButton.setAttribute('class', 'start-button');\n    startButton.innerText = 'Start The Game';\n    swarmSection.appendChild(startButton);\n    initializeBees(startButton);\n    return startButton;\n}\n"],"names":["BeeType","BeeTypeSingular","BeeTypeMapping","QUEEN","WORKER","DRONE","BeeHealth","BeeHitDamage","saveGameStatus","status","localStorage","setItem","String","saveSwarm","swarm","JSON","stringify","getSwarm","parse","getItem","getPlayerName","resetGame","clear","swarmSection","document","getElementById","displayGameUI","playerName","Swarm","innerHTML","playerNameElement","createElement","innerText","toUpperCase","appendChild","divMap","Object","keys","forEach","key","beeType","bees","beeContainer","setAttribute","toLowerCase","container","bee","health","isAlive","specificBee","classList","add","id","healthBar","type","beeTypeDisplay","beeImage","createBees","alertAndHandleReset","message","reset","alert","location","reload","hitButtonAction","hitButton","addEventListener","selectedBee","aliveBees","values","flat","filter","length","Math","floor","random","console","log","getRandomBeeType","updateBee","remove","removeBeeDOMElement","attackBee","beeElement","beeInfo","damageInfo","querySelector","setTimeout","updateBeeDOMElement","beeIndex","findIndex","b","updateBeeStorage","gameInProgress","actionButtons","attackInfo","initializeBees","gameButton","hasAttribute","playerInfo","playerInput","value","name","style","display","Workers","Queen","Drones","startGameButton","resetGameButton","playerNameDiv","playerNameLabel","playerNameInput","createPlayerNameElements","startButton","createStartButton"],"sourceRoot":""}